/* REXX

   Encapsulate PDS search to provide selective browse


*/
hitmax=500         /* max hits ceiling         */

/*                */
/* trace results  */

arg search_dsn
if length(search_dsn)=0 then do
   say "Dataset name required"
   say "Enter dataset name or press enter to quit"
   pull search_dsn
   if length(search_dsn)=0 then exit
   end


/* Display popup window */

search_dsn=strip(search_dsn,b,"'")     /* strip quotes if any */

ZWINTTL = 'Search '||search_dsn

Qloop:

ISPEXEC "ADDPOP ROW(4) COLUMN(4)"
ISPEXEC "VGET (db2srch1,db2srch2,db2srch3) PROFILE"
ISPEXEC "DISPLAY PANEL(db2srchw)"

IF RC=8 THEN signal leave

ISPEXEC "REMPOP"

search_arg1=strip(db2srch1,b,"'")     /* strip quotes if any */
search_arg2=strip(db2srch2,b,"'")
search_arg3=strip(db2srch3,b,"'")

ADDRESS TSO

  stat=MSG("OFF")      /* turn messages off */

/* free datasets */

  "FREE FILE(OUTDD)"
  "FREE FILE(NEWDD)"
  "FREE FILE(SYSIN)"

/* set search argument sysin data adding quotes if needed */

  drop inrec.
  inrec.1='SRCHFOR '||"'"||search_arg1||"'"
  if search_arg2>' ' then
    inrec.2='SRCHFORC '||"'"||search_arg2||"'"
  if search_arg3>' ' then
    inrec.3='SRCHFORC '||"'"||search_arg3||"'"

/* sysin input dsn */

  "ALLOC  F(SYSIN) NEW DELETE RECFM(F) BLKSIZE(80)"
  "EXECIO * DISKW SYSIN (STEM INREC. FINIS"

/* output dsn */

  rptdsn=SYSVAR("SYSUID")||'.$$TEMP$$.TEMP.RPTOUT'
  stat=MSG("OFF")
  "DELETE "rptdsn
  "ALLOC F(OUTDD) DA("rptdsn")",
  " NEW CYLINDERS CATALOG SPACE(3,2)",
  " UNIT(SYSDA)",
  " BLKSIZE(0) RECFM(F,B,A) LRECL(133)"

/* search dsn */

  "ALLOC FILE(NEWDD) DATASET('"search_dsn"') SHR REUSE"

/* run search */

  "CALL 'ISP.SISPLPA(ISRSUPC)' 'SRCHCMP,ANYC'  "

/* free datasets */

  "FREE FILE(OUTDD)"
  "FREE FILE(NEWDD)"
  "FREE FILE(SYSIN)"

/* allocate and proces report file */

  "ALLOC FILE(INDD) DA("rptdsn") SHR",

  eof = 'no'                            /* initialize end-of-file  */
  hit_count=0

  do while eof = 'no'                   /* loop until eof          */
     "EXECIO 1 DISKR INDD (STEM ILINE." /* READ A LINE             */
      if rc = 2 then                    /* if eof                  */
        eof = 'yes'
      else                              /* otherwise               */
        do                              /* test for content        */
          if pos('- STRING(S) FOUND -',iline.1) > 0
            then do
            cur_memb=substr(iline.1,3,8)
            end
          if datatype(substr(iline.1,5,4))='NUM'
            then do
            hit_count=hit_count+1
            hit_stem.hit_count=cur_memb||' '||substr(iline.1,10,70)
            member.hit_count=cur_memb
            end
          if hit_count > hitmax
            then do
            hit_count=hit_count+1
            hit_stem.hit_count='  '
            hit_count=hit_count+1
            hit_stem.hit_count=,
                ' ++++++ hit count > 'hitmax', be more specific',
                'in your search ++++++'
            hit_count=hit_count+1
            hit_stem.hit_count=,
                ' ++++++ You can change maximum hit ceiling by',
                'altering tag "hitmax" ++++++'
            hit_count=hit_count+1
            hit_stem.hit_count=,
                ' ++++++ If "hitmax" is changed, the OUTDD',
                'alloc may have to increase ++++++'
            hit_count=hit_count+1
            hit_stem.hit_count='  '
            eof = 'yes'
            end
        end
    end

  "EXECIO 0 DISKR INDD (FINIS"          /* Close INDD file         */
  "FREE FILE(INDD)"

   /* ------------------------------------------------------
      done with call, display results in an ISPF table
      ------------------------------------------------------ */

   title1='Search results for ==>'||search_arg1
   title2='   and ==>'||search_arg2||'  and ==>'||search_arg3
   title3=' '

Mloop:

   "ISPEXEC TBCREATE stemsrch names(x, line) NOWRITE SHARE"

    do i=1 to hit_count
      x='_'
      line=hit_stem.i
      "ISPEXEC TBADD stemsrch"
    end

   "ISPEXEC TBTOP   stemsrch"
   "ISPEXEC TBDISPL stemsrch PANEL(stemsrch) position(irownum)"
    rownum=irownum+0     /* make numeric */
    if rownum>0 then member_name=strip(member.rownum)
    action=x
   "ISPEXEC TBCLOSE stemsrch"

   found_mem=search_dsn||'('||member_name||')'
   upper found_mem
   if rownum>0 then do
     if (action='E' | action='e')  then do
       ADDRESS ISPEXEC "EDIT DATASET('"found_mem"')"
       end
      else do
       ADDRESS ISPEXEC "BROWSE DATASET('"found_mem"')"
       IF RC>0 THEN ADDRESS ISPEXEC "SETMSG MSG("ZERRMSG")"
       end
   end

  if rownum>0 then signal Mloop

  stat=MSG("ON")       /* turn messages back on */

  signal Qloop

leave:

exit
